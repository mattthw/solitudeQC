//Decompiled code. Please respect the original copyright.
void() finale_1;
void() finale_2;
void() finale_3;
void() finale_4;
void() old_idle2;

void() old_idle1 = [ 0, old_idle2 ]
{
};
void() old_idle3;

void() old_idle2 = [ 1, old_idle3 ]
{
};
void() old_idle4;

void() old_idle3 = [ 2, old_idle4 ]
{
};
void() old_idle5;

void() old_idle4 = [ 3, old_idle5 ]
{
};
void() old_idle6;

void() old_idle5 = [ 4, old_idle6 ]
{
};
void() old_idle7;

void() old_idle6 = [ 5, old_idle7 ]
{
};
void() old_idle8;

void() old_idle7 = [ 6, old_idle8 ]
{
};
void() old_idle9;

void() old_idle8 = [ 7, old_idle9 ]
{
};
void() old_idle10;

void() old_idle9 = [ 8, old_idle10 ]
{
};
void() old_idle11;

void() old_idle10 = [ 9, old_idle11 ]
{
};
void() old_idle12;

void() old_idle11 = [ 10, old_idle12 ]
{
};
void() old_idle13;

void() old_idle12 = [ 11, old_idle13 ]
{
};
void() old_idle14;

void() old_idle13 = [ 12, old_idle14 ]
{
};
void() old_idle15;

void() old_idle14 = [ 13, old_idle15 ]
{
};
void() old_idle16;

void() old_idle15 = [ 14, old_idle16 ]
{
};
void() old_idle17;

void() old_idle16 = [ 15, old_idle17 ]
{
};
void() old_idle18;

void() old_idle17 = [ 16, old_idle18 ]
{
};
void() old_idle19;

void() old_idle18 = [ 17, old_idle19 ]
{
};
void() old_idle20;

void() old_idle19 = [ 18, old_idle20 ]
{
};
void() old_idle21;

void() old_idle20 = [ 19, old_idle21 ]
{
};
void() old_idle22;

void() old_idle21 = [ 20, old_idle22 ]
{
};
void() old_idle23;

void() old_idle22 = [ 21, old_idle23 ]
{
};
void() old_idle24;

void() old_idle23 = [ 22, old_idle24 ]
{
};
void() old_idle25;

void() old_idle24 = [ 23, old_idle25 ]
{
};
void() old_idle26;

void() old_idle25 = [ 24, old_idle26 ]
{
};
void() old_idle27;

void() old_idle26 = [ 25, old_idle27 ]
{
};
void() old_idle28;

void() old_idle27 = [ 26, old_idle28 ]
{
};
void() old_idle29;

void() old_idle28 = [ 27, old_idle29 ]
{
};
void() old_idle30;

void() old_idle29 = [ 28, old_idle30 ]
{
};
void() old_idle31;

void() old_idle30 = [ 29, old_idle31 ]
{
};
void() old_idle32;

void() old_idle31 = [ 30, old_idle32 ]
{
};
void() old_idle33;

void() old_idle32 = [ 31, old_idle33 ]
{
};
void() old_idle34;

void() old_idle33 = [ 32, old_idle34 ]
{
};
void() old_idle35;

void() old_idle34 = [ 33, old_idle35 ]
{
};
void() old_idle36;

void() old_idle35 = [ 34, old_idle36 ]
{
};
void() old_idle37;

void() old_idle36 = [ 35, old_idle37 ]
{
};
void() old_idle38;

void() old_idle37 = [ 36, old_idle38 ]
{
};
void() old_idle39;

void() old_idle38 = [ 37, old_idle39 ]
{
};
void() old_idle40;

void() old_idle39 = [ 38, old_idle40 ]
{
};
void() old_idle41;

void() old_idle40 = [ 39, old_idle41 ]
{
};
void() old_idle42;

void() old_idle41 = [ 40, old_idle42 ]
{
};
void() old_idle43;

void() old_idle42 = [ 41, old_idle43 ]
{
};
void() old_idle44;

void() old_idle43 = [ 42, old_idle44 ]
{
};
void() old_idle45;

void() old_idle44 = [ 43, old_idle45 ]
{
};
void() old_idle46;

void() old_idle45 = [ 44, old_idle46 ]
{
};

void() old_idle46 = [ 45, old_idle1 ]
{
};
void() old_thrash2;

void() old_thrash1 = [ 46, old_thrash2 ]
{
	lightstyle(TE_SPIKE, /*19245i*/"m");
};
void() old_thrash3;

void() old_thrash2 = [ 47, old_thrash3 ]
{
	lightstyle(TE_SPIKE, /*50583i*/"k");
};
void() old_thrash4;

void() old_thrash3 = [ 48, old_thrash4 ]
{
	lightstyle(TE_SPIKE, /*50583i*/"k");
};
void() old_thrash5;

void() old_thrash4 = [ 49, old_thrash5 ]
{
	lightstyle(TE_SPIKE, /*50609i*/"i");
};
void() old_thrash6;

void() old_thrash5 = [ 50, old_thrash6 ]
{
	lightstyle(TE_SPIKE, /*50623i*/"g");
};
void() old_thrash7;

void() old_thrash6 = [ 51, old_thrash7 ]
{
	lightstyle(TE_SPIKE, /*50637i*/"e");
};
void() old_thrash8;

void() old_thrash7 = [ 52, old_thrash8 ]
{
	lightstyle(TE_SPIKE, /*50651i*/"c");
};
void() old_thrash9;

void() old_thrash8 = [ 53, old_thrash9 ]
{
	lightstyle(TE_SPIKE, /*19575i*/"a");
};
void() old_thrash10;

void() old_thrash9 = [ 54, old_thrash10 ]
{
	lightstyle(TE_SPIKE, /*50651i*/"c");
};
void() old_thrash11;

void() old_thrash10 = [ 55, old_thrash11 ]
{
	lightstyle(TE_SPIKE, /*50637i*/"e");
};
void() old_thrash12;

void() old_thrash11 = [ 56, old_thrash12 ]
{
	lightstyle(TE_SPIKE, /*50623i*/"g");
};
void() old_thrash13;

void() old_thrash12 = [ 58, old_thrash13 ]
{
	lightstyle(TE_SPIKE, /*50609i*/"i");
};
void() old_thrash14;

void() old_thrash13 = [ 59, old_thrash14 ]
{
	lightstyle(TE_SPIKE, /*50583i*/"k");
};
void() old_thrash15;

void() old_thrash14 = [ 60, old_thrash15 ]
{
	lightstyle(TE_SPIKE, /*19245i*/"m");
};
void() old_thrash16;

void() old_thrash15 = [ 61, old_thrash16 ]
{
	lightstyle(TE_SPIKE, /*19245i*/"m");
	self.cnt = (self.cnt + IT_SHOTGUN);
	if ((self.cnt < TE_EXPLOSION))
	{
		self.think = old_thrash1;
	}
};
void() old_thrash17;

void() old_thrash16 = [ 62, old_thrash17 ]
{
	lightstyle(TE_SPIKE, /*50623i*/"g");
};
void() old_thrash18;

void() old_thrash17 = [ 63, old_thrash18 ]
{
	lightstyle(TE_SPIKE, /*50651i*/"c");
};
void() old_thrash19;

void() old_thrash18 = [ 64, old_thrash19 ]
{
	lightstyle(TE_SPIKE, /*50793i*/"b");
};
void() old_thrash20;

void() old_thrash19 = [ 65, old_thrash20 ]
{
	lightstyle(TE_SPIKE, /*19575i*/"a");
};

void() old_thrash20 = [ 66, old_thrash20 ]
{
	finale_4();
};

void() finale_1 =
{
	local entity pos;
	local entity pl;
	local entity timer;

	killed_monsters = killed_monsters + IT_SHOTGUN;
	WriteByte(IT_SUPER_SHOTGUN, SVC_KILLEDMONSTER);
	intermission_exittime = time + 10000000;
	intermission_running = IT_SHOTGUN;
	pos = find(world, classname, /*20166i*/"info_intermission");
	if (!pos)
	{
		error(/*50834i*/"no info_intermission");
	}
	pl = find(world, classname, /*50855i*/"misc_teleporttrain");
	if (!pl)
	{
		error(/*50874i*/"no teleporttrain");
	}
	remove(pl);
	ENG_Finale("");
	pl = find(world, classname, /*1957i*/"player");
	while ((pl != world))
	{
		pl.view_ofs = VEC_ORIGIN;
		other.v_angle = pos.mangle;
		pl.angles = pos.mangle;
		pl.fixangle = IT_SHOTGUN;
		pl.map = self.map;
		pl.nextthink = (time + 0.5);
		pl.takedamage = TE_SPIKE;
		pl.solid = TE_SPIKE;
		pl.movetype = TE_SPIKE;
		pl.modelindex = TE_SPIKE;
		setorigin(pl, pos.origin);
		pl = find(pl, classname, /*1957i*/"player");
	}
	timer = spawn();
	timer.nextthink = (time + IT_SHOTGUN);
	timer.think = finale_2;
};

void() finale_2 =
{
	local vector o;

	o = shub.origin - '0 100 0';
	TE_teleport(o);
	sound(shub, IT_SUPER_SHOTGUN, "misc/r_tele1.wav", IT_SHOTGUN, IT_SHOTGUN);
	self.nextthink = (time + IT_SUPER_SHOTGUN);
	self.think = finale_3;
};

void() finale_3 =
{
	lightstyle(TE_SPIKE, /*19575i*/"a");
	shub.think = old_thrash1;
	sound(shub, IT_SUPER_SHOTGUN, "boss2/death.wav", IT_SHOTGUN, IT_SHOTGUN);
	remove(self);
};

void() finale_4 =
{
	local vector oldo;
	local float x;
	local float y;
	local float z;
	local float r;
	local entity n;

	sound(self, IT_SUPER_SHOTGUN, "boss2/pop2.wav", IT_SHOTGUN, IT_SHOTGUN);
	oldo = self.origin;
	z = IT_GRENADE_LAUNCHER;
	while ((z <= 144))
	{
		x = -64;
		while ((x <= IT_LIGHTNING))
		{
			y = -64;
			while ((y <= IT_LIGHTNING))
			{
				self.origin_x = (oldo_x + x);
				self.origin_y = (oldo_y + y);
				self.origin_z = (oldo_z + z);
				r = random();
				if ((r < 0.3))
				{
					ThrowGib("progs/gib1.mdl", -999);
				}
				else
				{
					if ((r < 0.6))
					{
						ThrowGib("progs/gib2.mdl", -999);
					}
					else
					{
						ThrowGib("progs/gib3.mdl", -999);
					}
				}
				y = y + IT_ROCKET_LAUNCHER;
			}
			x = x + IT_ROCKET_LAUNCHER;
		}
		z = z + 96;
	}
	ENG_Finale("Congratulations and well done! You have\nbeaten the hideous Shub-Niggurath, and\nher hundreds of ugly changelings and\nmonsters. You have proven that your\nskill and your cunning are greater than\nall the powers of Quake. You are the\nmaster now. Id Software salutes you.");
	n = spawn();
	setmodel(n, /*18891i*/"progs/player.mdl");
	oldo = oldo - '32 264 0';
	setorigin(n, oldo);
	n.angles = '0 290 0';
	n.frame = IT_SHOTGUN;
	remove(self);
	ENG_SwitchTrack(TE_EXPLOSION, TE_EXPLOSION);
	lightstyle(TE_SPIKE, /*19245i*/"m");
};

void() nopain =
{
	self.health = 40000;
};

void() monster_oldone =
{
	if (deathmatch)
	{
		remove(self);
		return;
	}
	precache_model2(/*51232i*/"progs/oldone.mdl");
	precache_sound2(/*50910i*/"boss2/death.wav");
	precache_sound2(/*51249i*/"boss2/idle.wav");
	precache_sound2(/*51264i*/"boss2/sight.wav");
	precache_sound2(/*50935i*/"boss2/pop2.wav");
	self.solid = TE_EXPLOSION;
	self.movetype = IT_NAILGUN;
	setmodel(self, /*51232i*/"progs/oldone.mdl");
	setsize(self, '-160 -128 -24', '160 128 256');
	self.health = 40000;
	self.think = old_idle1;
	self.nextthink = (time + 0.1);
	self.takedamage = IT_SHOTGUN;
	self.th_pain = nopain;
	self.th_die = finale_1;
	shub = self;
	total_monsters = total_monsters + IT_SHOTGUN;
};
